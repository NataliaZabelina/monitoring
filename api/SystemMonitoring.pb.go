// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.5.1
// source: SystemMonitoring.proto

package api

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time   int32 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Period int32 `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SystemMonitoring_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_SystemMonitoring_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_SystemMonitoring_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Request) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

type SystemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseTime     *timestamp.Timestamp `protobuf:"bytes,1,opt,name=response_time,json=responseTime,proto3" json:"response_time,omitempty"`
	LoadAverageValue float64              `protobuf:"fixed64,2,opt,name=load_average_value,json=loadAverageValue,proto3" json:"load_average_value,omitempty"`
}

func (x *SystemResponse) Reset() {
	*x = SystemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SystemMonitoring_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemResponse) ProtoMessage() {}

func (x *SystemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_SystemMonitoring_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemResponse.ProtoReflect.Descriptor instead.
func (*SystemResponse) Descriptor() ([]byte, []int) {
	return file_SystemMonitoring_proto_rawDescGZIP(), []int{1}
}

func (x *SystemResponse) GetResponseTime() *timestamp.Timestamp {
	if x != nil {
		return x.ResponseTime
	}
	return nil
}

func (x *SystemResponse) GetLoadAverageValue() float64 {
	if x != nil {
		return x.LoadAverageValue
	}
	return 0
}

type CPUResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=response_time,json=responseTime,proto3" json:"response_time,omitempty"`
	UserMode     float64              `protobuf:"fixed64,2,opt,name=user_mode,json=userMode,proto3" json:"user_mode,omitempty"`
	SystemMode   float64              `protobuf:"fixed64,3,opt,name=system_mode,json=systemMode,proto3" json:"system_mode,omitempty"`
	Idle         float64              `protobuf:"fixed64,4,opt,name=idle,proto3" json:"idle,omitempty"`
}

func (x *CPUResponse) Reset() {
	*x = CPUResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SystemMonitoring_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUResponse) ProtoMessage() {}

func (x *CPUResponse) ProtoReflect() protoreflect.Message {
	mi := &file_SystemMonitoring_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUResponse.ProtoReflect.Descriptor instead.
func (*CPUResponse) Descriptor() ([]byte, []int) {
	return file_SystemMonitoring_proto_rawDescGZIP(), []int{2}
}

func (x *CPUResponse) GetResponseTime() *timestamp.Timestamp {
	if x != nil {
		return x.ResponseTime
	}
	return nil
}

func (x *CPUResponse) GetUserMode() float64 {
	if x != nil {
		return x.UserMode
	}
	return 0
}

func (x *CPUResponse) GetSystemMode() float64 {
	if x != nil {
		return x.SystemMode
	}
	return 0
}

func (x *CPUResponse) GetIdle() float64 {
	if x != nil {
		return x.Idle
	}
	return 0
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemValue    *SystemResponse            `protobuf:"bytes,1,opt,name=system_value,json=systemValue,proto3" json:"system_value,omitempty"`
	CpuValue       *CPUResponse               `protobuf:"bytes,2,opt,name=cpu_value,json=cpuValue,proto3" json:"cpu_value,omitempty"`
	DiskValue      *DiskResponse              `protobuf:"bytes,3,opt,name=disk_value,json=diskValue,proto3" json:"disk_value,omitempty"`
	TopTalkerValue *TopTalkersResponse        `protobuf:"bytes,4,opt,name=top_talker_value,json=topTalkerValue,proto3" json:"top_talker_value,omitempty"`
	NetstatValue   *NetworkStatisticsResponse `protobuf:"bytes,5,opt,name=netstat_value,json=netstatValue,proto3" json:"netstat_value,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SystemMonitoring_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_SystemMonitoring_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_SystemMonitoring_proto_rawDescGZIP(), []int{3}
}

func (x *Result) GetSystemValue() *SystemResponse {
	if x != nil {
		return x.SystemValue
	}
	return nil
}

func (x *Result) GetCpuValue() *CPUResponse {
	if x != nil {
		return x.CpuValue
	}
	return nil
}

func (x *Result) GetDiskValue() *DiskResponse {
	if x != nil {
		return x.DiskValue
	}
	return nil
}

func (x *Result) GetTopTalkerValue() *TopTalkersResponse {
	if x != nil {
		return x.TopTalkerValue
	}
	return nil
}

func (x *Result) GetNetstatValue() *NetworkStatisticsResponse {
	if x != nil {
		return x.NetstatValue
	}
	return nil
}

type DiskIO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device string  `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	Tps    float64 `protobuf:"fixed64,2,opt,name=tps,proto3" json:"tps,omitempty"`
	KbPerS float64 `protobuf:"fixed64,3,opt,name=kb_per_s,json=kbPerS,proto3" json:"kb_per_s,omitempty"`
}

func (x *DiskIO) Reset() {
	*x = DiskIO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SystemMonitoring_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskIO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskIO) ProtoMessage() {}

func (x *DiskIO) ProtoReflect() protoreflect.Message {
	mi := &file_SystemMonitoring_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskIO.ProtoReflect.Descriptor instead.
func (*DiskIO) Descriptor() ([]byte, []int) {
	return file_SystemMonitoring_proto_rawDescGZIP(), []int{4}
}

func (x *DiskIO) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DiskIO) GetTps() float64 {
	if x != nil {
		return x.Tps
	}
	return 0
}

func (x *DiskIO) GetKbPerS() float64 {
	if x != nil {
		return x.KbPerS
	}
	return 0
}

type DiskFS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsedProc  string `protobuf:"bytes,1,opt,name=used_proc,json=usedProc,proto3" json:"used_proc,omitempty"`
	IusedProc string `protobuf:"bytes,2,opt,name=iused_proc,json=iusedProc,proto3" json:"iused_proc,omitempty"`
}

func (x *DiskFS) Reset() {
	*x = DiskFS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SystemMonitoring_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskFS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskFS) ProtoMessage() {}

func (x *DiskFS) ProtoReflect() protoreflect.Message {
	mi := &file_SystemMonitoring_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskFS.ProtoReflect.Descriptor instead.
func (*DiskFS) Descriptor() ([]byte, []int) {
	return file_SystemMonitoring_proto_rawDescGZIP(), []int{5}
}

func (x *DiskFS) GetUsedProc() string {
	if x != nil {
		return x.UsedProc
	}
	return ""
}

func (x *DiskFS) GetIusedProc() string {
	if x != nil {
		return x.IusedProc
	}
	return ""
}

type DiskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=response_time,json=responseTime,proto3" json:"response_time,omitempty"`
	Io           []*DiskIO            `protobuf:"bytes,2,rep,name=io,proto3" json:"io,omitempty"`
	Fs           []*DiskFS            `protobuf:"bytes,3,rep,name=fs,proto3" json:"fs,omitempty"`
}

func (x *DiskResponse) Reset() {
	*x = DiskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SystemMonitoring_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskResponse) ProtoMessage() {}

func (x *DiskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_SystemMonitoring_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskResponse.ProtoReflect.Descriptor instead.
func (*DiskResponse) Descriptor() ([]byte, []int) {
	return file_SystemMonitoring_proto_rawDescGZIP(), []int{6}
}

func (x *DiskResponse) GetResponseTime() *timestamp.Timestamp {
	if x != nil {
		return x.ResponseTime
	}
	return nil
}

func (x *DiskResponse) GetIo() []*DiskIO {
	if x != nil {
		return x.Io
	}
	return nil
}

func (x *DiskResponse) GetFs() []*DiskFS {
	if x != nil {
		return x.Fs
	}
	return nil
}

type TopTalkersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=response_time,json=responseTime,proto3" json:"response_time,omitempty"`
	ProtocolStat []*ProtocolStat      `protobuf:"bytes,2,rep,name=protocol_stat,json=protocolStat,proto3" json:"protocol_stat,omitempty"`
	TrafficStat  []*TrafficStat       `protobuf:"bytes,3,rep,name=traffic_stat,json=trafficStat,proto3" json:"traffic_stat,omitempty"`
}

func (x *TopTalkersResponse) Reset() {
	*x = TopTalkersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SystemMonitoring_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopTalkersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopTalkersResponse) ProtoMessage() {}

func (x *TopTalkersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_SystemMonitoring_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopTalkersResponse.ProtoReflect.Descriptor instead.
func (*TopTalkersResponse) Descriptor() ([]byte, []int) {
	return file_SystemMonitoring_proto_rawDescGZIP(), []int{7}
}

func (x *TopTalkersResponse) GetResponseTime() *timestamp.Timestamp {
	if x != nil {
		return x.ResponseTime
	}
	return nil
}

func (x *TopTalkersResponse) GetProtocolStat() []*ProtocolStat {
	if x != nil {
		return x.ProtocolStat
	}
	return nil
}

func (x *TopTalkersResponse) GetTrafficStat() []*TrafficStat {
	if x != nil {
		return x.TrafficStat
	}
	return nil
}

type ProtocolStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol      string `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Traffic       int32  `protobuf:"varint,2,opt,name=traffic,proto3" json:"traffic,omitempty"`
	ProcPerPeriod string `protobuf:"bytes,3,opt,name=proc_per_period,json=procPerPeriod,proto3" json:"proc_per_period,omitempty"`
}

func (x *ProtocolStat) Reset() {
	*x = ProtocolStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SystemMonitoring_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtocolStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtocolStat) ProtoMessage() {}

func (x *ProtocolStat) ProtoReflect() protoreflect.Message {
	mi := &file_SystemMonitoring_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtocolStat.ProtoReflect.Descriptor instead.
func (*ProtocolStat) Descriptor() ([]byte, []int) {
	return file_SystemMonitoring_proto_rawDescGZIP(), []int{8}
}

func (x *ProtocolStat) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ProtocolStat) GetTraffic() int32 {
	if x != nil {
		return x.Traffic
	}
	return 0
}

func (x *ProtocolStat) GetProcPerPeriod() string {
	if x != nil {
		return x.ProcPerPeriod
	}
	return ""
}

type TrafficStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source      string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Destination string `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	Protocol    string `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Bps         int32  `protobuf:"varint,4,opt,name=bps,proto3" json:"bps,omitempty"`
}

func (x *TrafficStat) Reset() {
	*x = TrafficStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SystemMonitoring_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficStat) ProtoMessage() {}

func (x *TrafficStat) ProtoReflect() protoreflect.Message {
	mi := &file_SystemMonitoring_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficStat.ProtoReflect.Descriptor instead.
func (*TrafficStat) Descriptor() ([]byte, []int) {
	return file_SystemMonitoring_proto_rawDescGZIP(), []int{9}
}

func (x *TrafficStat) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *TrafficStat) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *TrafficStat) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *TrafficStat) GetBps() int32 {
	if x != nil {
		return x.Bps
	}
	return 0
}

type NetworkStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseTime      *timestamp.Timestamp  `protobuf:"bytes,1,opt,name=response_time,json=responseTime,proto3" json:"response_time,omitempty"`
	ListenSocketsStat []*ListenSocketsStat  `protobuf:"bytes,2,rep,name=listen_sockets_stat,json=listenSocketsStat,proto3" json:"listen_sockets_stat,omitempty"`
	TcpConnStat       []*TcpConnectionsStat `protobuf:"bytes,3,rep,name=tcp_conn_stat,json=tcpConnStat,proto3" json:"tcp_conn_stat,omitempty"`
}

func (x *NetworkStatisticsResponse) Reset() {
	*x = NetworkStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SystemMonitoring_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStatisticsResponse) ProtoMessage() {}

func (x *NetworkStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_SystemMonitoring_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStatisticsResponse.ProtoReflect.Descriptor instead.
func (*NetworkStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_SystemMonitoring_proto_rawDescGZIP(), []int{10}
}

func (x *NetworkStatisticsResponse) GetResponseTime() *timestamp.Timestamp {
	if x != nil {
		return x.ResponseTime
	}
	return nil
}

func (x *NetworkStatisticsResponse) GetListenSocketsStat() []*ListenSocketsStat {
	if x != nil {
		return x.ListenSocketsStat
	}
	return nil
}

func (x *NetworkStatisticsResponse) GetTcpConnStat() []*TcpConnectionsStat {
	if x != nil {
		return x.TcpConnStat
	}
	return nil
}

type ListenSocketsStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command  string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Pid      int32  `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	User     string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Protocol string `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Port     int32  `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *ListenSocketsStat) Reset() {
	*x = ListenSocketsStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SystemMonitoring_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenSocketsStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenSocketsStat) ProtoMessage() {}

func (x *ListenSocketsStat) ProtoReflect() protoreflect.Message {
	mi := &file_SystemMonitoring_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenSocketsStat.ProtoReflect.Descriptor instead.
func (*ListenSocketsStat) Descriptor() ([]byte, []int) {
	return file_SystemMonitoring_proto_rawDescGZIP(), []int{11}
}

func (x *ListenSocketsStat) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ListenSocketsStat) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ListenSocketsStat) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ListenSocketsStat) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ListenSocketsStat) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type TcpConnectionsStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TcpConnCount int32 `protobuf:"varint,1,opt,name=tcp_conn_count,json=tcpConnCount,proto3" json:"tcp_conn_count,omitempty"`
}

func (x *TcpConnectionsStat) Reset() {
	*x = TcpConnectionsStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SystemMonitoring_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TcpConnectionsStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TcpConnectionsStat) ProtoMessage() {}

func (x *TcpConnectionsStat) ProtoReflect() protoreflect.Message {
	mi := &file_SystemMonitoring_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TcpConnectionsStat.ProtoReflect.Descriptor instead.
func (*TcpConnectionsStat) Descriptor() ([]byte, []int) {
	return file_SystemMonitoring_proto_rawDescGZIP(), []int{12}
}

func (x *TcpConnectionsStat) GetTcpConnCount() int32 {
	if x != nil {
		return x.TcpConnCount
	}
	return 0
}

var File_SystemMonitoring_proto protoreflect.FileDescriptor

var file_SystemMonitoring_proto_rawDesc = []byte{
	0x0a, 0x16, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x7f, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x0b, 0x43, 0x50, 0x55, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x22, 0xa9, 0x02, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2d, 0x0a, 0x09,
	0x63, 0x70, 0x75, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x50, 0x55, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x63, 0x70, 0x75, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x64,
	0x69, 0x73, 0x6b, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x41, 0x0a,
	0x10, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x6f,
	0x70, 0x54, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0e, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x43, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x6e, 0x65, 0x74, 0x73, 0x74, 0x61, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4c, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x4f, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x70, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x74, 0x70, 0x73, 0x12, 0x18, 0x0a, 0x08, 0x6b, 0x62, 0x5f,
	0x70, 0x65, 0x72, 0x5f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6b, 0x62, 0x50,
	0x65, 0x72, 0x53, 0x22, 0x44, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x46, 0x53, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x75,
	0x73, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x75, 0x73, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x22, 0x89, 0x01, 0x0a, 0x0c, 0x44, 0x69,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x02, 0x69,
	0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x69,
	0x73, 0x6b, 0x49, 0x4f, 0x52, 0x02, 0x69, 0x6f, 0x12, 0x1b, 0x0a, 0x02, 0x66, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x46,
	0x53, 0x52, 0x02, 0x66, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x12, 0x54, 0x6f, 0x70, 0x54, 0x61, 0x6c,
	0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x12, 0x33, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0b, 0x74,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x22, 0x6c, 0x0a, 0x0c, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x50,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x75, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x62, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x62, 0x70, 0x73, 0x22,
	0xe1, 0x01, 0x0a, 0x19, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46,
	0x0a, 0x13, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x11, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x53, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x74, 0x63, 0x70, 0x5f, 0x63, 0x6f,
	0x6e, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x54, 0x63, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0b, 0x74, 0x63, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x53, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x3a, 0x0a, 0x12, 0x54, 0x63, 0x70,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x74, 0x63, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x63, 0x70, 0x43, 0x6f, 0x6e, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0x36, 0x0a, 0x0a, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x30, 0x01, 0x42, 0x08, 0x5a,
	0x06, 0x2e, 0x2f, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_SystemMonitoring_proto_rawDescOnce sync.Once
	file_SystemMonitoring_proto_rawDescData = file_SystemMonitoring_proto_rawDesc
)

func file_SystemMonitoring_proto_rawDescGZIP() []byte {
	file_SystemMonitoring_proto_rawDescOnce.Do(func() {
		file_SystemMonitoring_proto_rawDescData = protoimpl.X.CompressGZIP(file_SystemMonitoring_proto_rawDescData)
	})
	return file_SystemMonitoring_proto_rawDescData
}

var file_SystemMonitoring_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_SystemMonitoring_proto_goTypes = []interface{}{
	(*Request)(nil),                   // 0: api.Request
	(*SystemResponse)(nil),            // 1: api.SystemResponse
	(*CPUResponse)(nil),               // 2: api.CPUResponse
	(*Result)(nil),                    // 3: api.Result
	(*DiskIO)(nil),                    // 4: api.DiskIO
	(*DiskFS)(nil),                    // 5: api.DiskFS
	(*DiskResponse)(nil),              // 6: api.DiskResponse
	(*TopTalkersResponse)(nil),        // 7: api.TopTalkersResponse
	(*ProtocolStat)(nil),              // 8: api.ProtocolStat
	(*TrafficStat)(nil),               // 9: api.TrafficStat
	(*NetworkStatisticsResponse)(nil), // 10: api.NetworkStatisticsResponse
	(*ListenSocketsStat)(nil),         // 11: api.ListenSocketsStat
	(*TcpConnectionsStat)(nil),        // 12: api.TcpConnectionsStat
	(*timestamp.Timestamp)(nil),       // 13: google.protobuf.Timestamp
}
var file_SystemMonitoring_proto_depIdxs = []int32{
	13, // 0: api.SystemResponse.response_time:type_name -> google.protobuf.Timestamp
	13, // 1: api.CPUResponse.response_time:type_name -> google.protobuf.Timestamp
	1,  // 2: api.Result.system_value:type_name -> api.SystemResponse
	2,  // 3: api.Result.cpu_value:type_name -> api.CPUResponse
	6,  // 4: api.Result.disk_value:type_name -> api.DiskResponse
	7,  // 5: api.Result.top_talker_value:type_name -> api.TopTalkersResponse
	10, // 6: api.Result.netstat_value:type_name -> api.NetworkStatisticsResponse
	13, // 7: api.DiskResponse.response_time:type_name -> google.protobuf.Timestamp
	4,  // 8: api.DiskResponse.io:type_name -> api.DiskIO
	5,  // 9: api.DiskResponse.fs:type_name -> api.DiskFS
	13, // 10: api.TopTalkersResponse.response_time:type_name -> google.protobuf.Timestamp
	8,  // 11: api.TopTalkersResponse.protocol_stat:type_name -> api.ProtocolStat
	9,  // 12: api.TopTalkersResponse.traffic_stat:type_name -> api.TrafficStat
	13, // 13: api.NetworkStatisticsResponse.response_time:type_name -> google.protobuf.Timestamp
	11, // 14: api.NetworkStatisticsResponse.listen_sockets_stat:type_name -> api.ListenSocketsStat
	12, // 15: api.NetworkStatisticsResponse.tcp_conn_stat:type_name -> api.TcpConnectionsStat
	0,  // 16: api.Monitoring.GetInfo:input_type -> api.Request
	3,  // 17: api.Monitoring.GetInfo:output_type -> api.Result
	17, // [17:18] is the sub-list for method output_type
	16, // [16:17] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_SystemMonitoring_proto_init() }
func file_SystemMonitoring_proto_init() {
	if File_SystemMonitoring_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_SystemMonitoring_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SystemMonitoring_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SystemMonitoring_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SystemMonitoring_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SystemMonitoring_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskIO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SystemMonitoring_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskFS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SystemMonitoring_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SystemMonitoring_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopTalkersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SystemMonitoring_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtocolStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SystemMonitoring_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SystemMonitoring_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SystemMonitoring_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenSocketsStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SystemMonitoring_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TcpConnectionsStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SystemMonitoring_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_SystemMonitoring_proto_goTypes,
		DependencyIndexes: file_SystemMonitoring_proto_depIdxs,
		MessageInfos:      file_SystemMonitoring_proto_msgTypes,
	}.Build()
	File_SystemMonitoring_proto = out.File
	file_SystemMonitoring_proto_rawDesc = nil
	file_SystemMonitoring_proto_goTypes = nil
	file_SystemMonitoring_proto_depIdxs = nil
}
