syntax = "proto3";

import "google/protobuf/timestamp.proto";

package api;
option go_package = "./;api";

service Monitoring {    
    rpc GetInfo(Request) returns (stream Result) {}   
  }

message Request {
    int32 time = 1;
    int32 period = 2;
}

message SystemResponse {
    google.protobuf.Timestamp response_time = 1; 
    double load_average_value = 2;
}

message CPUResponse {
    google.protobuf.Timestamp response_time = 1;
    double user_mode = 2;
    double system_mode = 3;
    double idle = 4;
}

message Result {
    SystemResponse system_value = 1;
    CPUResponse cpu_value = 2;
    DiskResponse disk_value = 3;
    TopTalkersResponse top_talker_value = 4;
    NetworkStatisticsResponse netstat_value = 5;
}

message DiskIO {
    string device = 1;
	double tps = 2;
	double kb_per_s = 3;
}

message DiskFS {
    string used_proc = 1;  
	string iused_proc = 2;     
}

message DiskResponse {
    google.protobuf.Timestamp response_time = 1;
    repeated DiskIO io = 2;
    repeated DiskFS fs = 3;
}

message TopTalkersResponse {
    google.protobuf.Timestamp response_time = 1;
    repeated ProtocolStat protocol_stat = 2;
    repeated TrafficStat traffic_stat = 3;
}

message ProtocolStat {
    string protocol = 1;
    int32 traffic = 2;
    string proc_per_period = 3;
}

message TrafficStat {
    string source = 1;
    string destination = 2;
    string protocol = 3;
    int32 bps = 4;
}

message NetworkStatisticsResponse {
    google.protobuf.Timestamp response_time = 1;
    repeated ListenSocketsStat listen_sockets_stat = 2;
    repeated TcpConnectionsStat tcp_conn_stat = 3;
}

message ListenSocketsStat {   
	string command = 1;
	int32 pid = 2;         
	string user = 3; 
	string protocol = 4;     
    int32 port = 5;
}

message TcpConnectionsStat {
    int32 tcp_conn_count = 1;
}